# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: npm install and build
        run: |
          npm install
          npm run build
      - name: Compress build
        run: tar -cvzf build.tar.gz build
      - shell: bash
        name: Store key to file
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          USER: ${{ secrets.USER }}
          HOST: ${{ secrets.HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" >> key.txt
          cat key.txt
          scp -i key.txt build.tar.gz "$USER"@"$HOST":~/
      #   run:
      #   run: echo "$SSH_PRIVATE_KEY" >> key.txt
      # - name: Upload build
      #   run:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
# build:
#   runs-on: ubuntu-latest
#   steps:
#     - name: Checkout repository
#     - uses: actions/checkout@v3
#     - name: npm install and build
#       run: |
#         npm install
#         npm run build
#     - name: Archive production artifacts
#       uses: actions/upload-artifact@v3
#       with:
#         name: build
#         path: |
#           build

# deploy:
# The type of runner that the job will run on
# runs-on: ubuntu-latest

# Steps represent a sequence of tasks that will be executed as part of the job
# steps:
# Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#- name: Download build
#- uses: actions/download-artifact@v3
#  with:
#    name: build
#- name: SSH
# - uses: appleboy/ssh-action@master
#   with:
#     host: ${{ secrets.HOST }}
#     username: ${{ secrets.USER }}
#     key: ${{ secrets.SSH_PRIVATE_KEY }}
#     script_stop: true
#     script: |
#       mkdir test
